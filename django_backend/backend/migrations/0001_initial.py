# Generated by Django 5.2.4 on 2025-07-30 03:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeName', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locationName', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceGender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CharityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
                ('signupDeadline', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('createTime', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('inviteCode', models.TextField(blank=True, null=True)),
                ('participants', models.ManyToManyField(blank=True, related_name='eventParticipants', to=settings.AUTH_USER_MODEL)),
                ('recommendedBy', models.ManyToManyField(blank=True, related_name='eventRecommendedBy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CharityInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.eventtype')),
            ],
        ),
        migrations.CreateModel(
            name='CharityEventCoOrganizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(blank=True, null=True)),
                ('charityEvent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.charityevent')),
                ('coOrganizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.charityinfo')),
            ],
        ),
        migrations.AddField(
            model_name='charityevent',
            name='coOrganizers',
            field=models.ManyToManyField(blank=True, related_name='coEvents', through='backend.CharityEventCoOrganizer', to='backend.charityinfo'),
        ),
        migrations.AddField(
            model_name='charityevent',
            name='mainOrganizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainEvents', to='backend.charityinfo'),
        ),
        migrations.AddField(
            model_name='charityevent',
            name='eventType',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.eventtype'),
        ),
        migrations.AddField(
            model_name='charityevent',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.location'),
        ),
        migrations.CreateModel(
            name='OfficialEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Normal', 'Normal'), ('Casino', 'Casino')], default='Normal', max_length=20)),
                ('startTime', models.DateTimeField(blank=True, null=True)),
                ('endTime', models.DateTimeField(blank=True, null=True)),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OfficialEventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('betAmount', models.IntegerField()),
                ('officialEvent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.officialevent')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='officialevent',
            name='participants',
            field=models.ManyToManyField(related_name='officialEvents', through='backend.OfficialEventParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True)),
                ('name', models.TextField()),
                ('CEO', models.TextField(blank=True, null=True)),
                ('contact', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('fax', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('founder', models.TextField(blank=True, null=True)),
                ('founded', models.TextField(blank=True, null=True)),
                ('authority', models.TextField(blank=True, null=True)),
                ('mission', models.TextField(blank=True, null=True)),
                ('focus', models.TextField(blank=True, null=True)),
                ('minAge', models.TextField(blank=True, null=True)),
                ('maxAge', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
                ('area', models.ManyToManyField(blank=True, to='backend.location')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.eventtype')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.servicegender')),
            ],
        ),
        migrations.AddField(
            model_name='charityinfo',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.organization'),
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventType', models.ManyToManyField(blank=True, to='backend.eventtype')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.location')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
